# Документация по бэкенду

### 1. Обработка запросов
- **Маршрутизация**
- **REST API**
- **Аутентификация**

### 2. Управление данными
- **Пользовательские данные**:
  - Профили
  - История
  - Уроки
- **Кэширование**: Redis

### 3. Интеграция ИИ
- **Обработка ошибок**
- **Рекомендации**
- **Анализ речи**
- **LangChain**

### 4. Аналитика
- **Сбор данных**
- **Отчёты**
- **Рекомендации**

## API эндпоинты

### 1. Аутентификация
- POST /auth/login
- POST /auth/register
- POST /auth/logout

### 2. Пользователи
- GET /users/{user_id}
- PATCH /users/{user_id}
- DELETE /users/{user_id}

### 3. Уроки
- GET /lessons
- GET /lessons/{lesson_id}
- POST /lessons/{lesson_id}/complete

### 4. Прогресс
- GET /progress/{user_id}
- GET /errors/{user_id}
- POST /errors/{user_id}

## Архитектура

### 1. Компоненты
- **FastAPI**
- **PostgreSQL**
- **Qdrant**
- **Redis**
- **Docker**

### 2. Особенности
- **Безопасность**:
  - JWT
  - Шифрование
- **Производительность**:
  - Асинхронность
  - Кэширование
- **Масштабируемость**:
  - Контейнеризация
  - Модульность

## Структура проекта
project/
├── services/
├── models/
├── helpers/
├── resources/
├── routes/